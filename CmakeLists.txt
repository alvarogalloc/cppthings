cmake_minimum_required(VERSION 3.12)
project(cpp-things VERSION 1.0)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Debug)

find_package(ut CONFIG REQUIRED)
find_package(fmt CONFIG REQUIRED)
# LIBRARIES Disable clip examples and tests
set(CLIP_EXAMPLES
    OFF
    CACHE BOOL "Compile clip examples")
set(CLIP_TESTS
    OFF
    CACHE BOOL "Compile clip tests")
# Add clip subdirectory to compile the library
add_subdirectory(clip)

file(GLOB SOURCE_FILES src/*.cpp src/exercises/*.cpp)
foreach(SOURCE_FILE_PATH ${SOURCE_FILES})
  get_filename_component(EXECUTABLE_NAME ${SOURCE_FILE_PATH} NAME_WE)
  add_executable("gallo${EXECUTABLE_NAME}" ${SOURCE_FILE_PATH})
  target_link_libraries("gallo${EXECUTABLE_NAME}" PRIVATE fmt::fmt)
endforeach(SOURCE_FILE_PATH ${SOURCE_FILES})

#start serialize
add_executable(serialout ./src/serializing/serialout.cpp)
target_compile_options(serialout PRIVATE -fmodules -fimplicit-modules
                                         -fimplicit-module-maps)
add_executable(serialin ./src/serializing/serialin.cpp)
target_compile_options(serialin PRIVATE -fmodules -fimplicit-modules
                                         -fimplicit-module-maps)
find_path(ZPP_BITS_INCLUDE_DIRS "zpp_bits.h")
target_include_directories(serialout PRIVATE ${ZPP_BITS_INCLUDE_DIRS})
target_link_libraries(serialout PRIVATE fmt::fmt)
target_include_directories(serialin PRIVATE ${ZPP_BITS_INCLUDE_DIRS})
target_link_libraries(serialin PRIVATE fmt::fmt)
#finish serialize

add_executable(rgb-to-hex src/special/rgb-to-hex.cpp)
add_executable(test test/first.cpp)
target_link_libraries(test PRIVATE Boost::ut)
target_link_libraries(rgb-to-hex clip)
